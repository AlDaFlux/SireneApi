<?php

namespace Pericles3Bundle\Repository;

use Pericles3Bundle\Entity\DemandeInfos;


/**
 * DemandeEtablissementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DemandeInfosRepository extends \Doctrine\ORM\EntityRepository
{ 
         
        
        public function findNonFiniCreai($creai) 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->where("demandes.etat<>3 AND demandes.creai= :creai");
            $qb->setParameter('creai', $creai);         
            return $qb->getQuery()->getResult();
        }
           
        public function findFiniCreai($creai,$limit=0) 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->where("demandes.etat=3 AND demandes.creai= :creai");
            $qb->setParameter('creai', $creai);         
            if ($limit) $qb->setMaxResults($limit);
            $qb->orderBy('demandes.dateDemande', 'DESC');
            return $qb->getQuery()->getResult();
        }
        
             
        public function findNonFiniSansCreai() 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->where("demandes.etat<>3 AND demandes.creai IS NULL");
            $qb->orderBy('demandes.dateDemande', 'DESC');
            return $qb->getQuery()->getResult();
        }
        public function findNbNonFiniSansCreai() 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->select('count(demandes.id)');
            $qb->where("demandes.etat<>3 AND demandes.creai IS NULL");
            return($qb->getQuery()->getSingleScalarResult());
        }

        
        
        
        public function findAtraiterSansCreai() 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->where("demandes.etat=1 AND demandes.creai IS NULL");
            $qb->orderBy('demandes.dateDemande', 'DESC');
            return $qb->getQuery()->getResult();
        }

        public function findATraiterNbSansCreai() 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->select('count(demandes.id)');
            $qb->where("demandes.etat=1 AND demandes.creai IS NULL");
            return($qb->getQuery()->getSingleScalarResult());
        }

        
        public function findSansCreai() 
        {
            $qb = $this->createQueryBuilder('demandes');
            $qb->where("demandes.creai IS NULL");
            $qb->orderBy('demandes.dateDemande', 'DESC');
            return $qb->getQuery()->getResult();
        }
        
        
}
