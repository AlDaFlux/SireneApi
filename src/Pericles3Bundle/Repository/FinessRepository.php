<?php

namespace Pericles3Bundle\Repository;

/**
 * ReferentielPublicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FinessRepository extends \Doctrine\ORM\EntityRepository
{
        public function GetFirsts($limit=200) 
        {
                $qb = $this->createQueryBuilder('finess');
//              $qb->where('dimension.domaine= :domaine_id')->setParameter('domaine_id', $Domaine->getId());
                $qb->setMaxResults($limit);
		return $qb->getQuery()->getResult();
	}
        
/*        
        public function GetByCodePostal($limit=200) 
        {
                $qb = $this->createQueryBuilder('finess');
//              $qb->where('dimension.domaine= :domaine_id')->setParameter('domaine_id', $Domaine->getId());
                $qb->setMaxResults($limit);
		return $qb->getQuery()->getResult();
	}
 * 
 */
        
        
        
    public function findProspectionReferentielPublic(\Pericles3Bundle\Entity\ReferentielPublic $referentielPublic) 
    {
        $qb = $this->createQueryBuilder('finess');
        $qb->Join('finess.gestionnaire', 'finessGestionnaire');
        $qb->LeftJoin('finess.etablissement', 'etablissementArsene');
        $qb->Join('finessGestionnaire.gestionnaire', 'gestionnaireArsene');
        $qb->Join('finess.codeCategorie', 'categorie');
        $qb->Join('categorie.referentielPublicDefault', 'refpublic');
        $qb->Where('etablissementArsene.id is null and  refpublic.id = '.$referentielPublic->GetId());

//        $qb->where('category.reel=1 AND finess.codeCategorie ='.$finessCategorie->getId());
        return $qb->getQuery()->getResult();
    }
    
     
    public function findProspectionCreai(\Pericles3Bundle\Entity\Creai $creai) 
    {
        $qb = $this->createQueryBuilder('finess');
        $qb->Join('finess.gestionnaire', 'finessGestionnaire');
        $qb->LeftJoin('finess.etablissement', 'etablissementArsene');
        $qb->Join('finessGestionnaire.gestionnaire', 'gestionnaireArsene');
        $qb->Join('finess.departement', 'etabDepartement');
        $qb->Join('etabDepartement.creai', 'etabCreai');
        $qb->Join('gestionnaireArsene.creai', 'gestionnaireCreai');
        
        $qb->Where('etablissementArsene.id is null ');
        $qb->AndWhere('etabCreai.id = '.$creai->GetId().'or gestionnaireCreai.id = '.$creai->GetId());
        
//        $qb->Where('etablissementArsene.id is null and  creai.id = '.$creai->GetId());
        return $qb->getQuery()->getResult();
    }
    
    
}
