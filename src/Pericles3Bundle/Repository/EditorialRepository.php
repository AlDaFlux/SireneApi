<?php

namespace Pericles3Bundle\Repository;

use Pericles3Bundle\Entity\Editorial;
/**
 * DomaineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EditorialRepository extends \Doctrine\ORM\EntityRepository
{
 
        
    	public function findPubliees() 
        {
            $qb = $this->createQueryBuilder('edito');
            $qb->where("edito.etatPublication=5"); 
            return $qb->getQuery()->getResult();
	}           
        	
        public function findMineAndFinish(\Pericles3Bundle\Entity\User $user) 
        {
            $qb = $this->createQueryBuilder('edito');
            $qb->where("edito.etatPublication=5"); 
            $qb->orWhere("edito.createdBy=".$user->getId()); 
            return $qb->getQuery()->getResult();
	}           
        
        
        
    public function findByUserFonction(\Pericles3Bundle\Entity\User $user, $limit = 0) 
    {
        $qb = $this->createQueryBuilder('edito');
        $qb->where("edito.etatPublication=5"); 
        $qb->LeftJoin("edito.referentielPublics","referentielPublics"); 
        $qb->LeftJoin("referentielPublics.etablissements","etablissements"); 
        
        /*
         *                      0 'tous' => 0,
                                'ARSENE (Etab et Gest)' => 1,
                                'Etablissements' => 2,
                                "Gestionnaire" => 3,
                                "CT" => 4,
         */
        if ($user->IsAnEtablissement())
        {
            $qb->AndWhere("referentielPublics.id IS NULL OR (etablissements.id=".$user->getEtablissement()->GetId().")");
            $qb->AndWhere("edito.etablissementGestionnaire<=2  ");
        }
        elseif ($user->getIsSuperAdmin())
        {
            $qb->AndWhere("edito.etablissementGestionnaire=0  OR edito.etablissementGestionnaire=4 ");
        }
        else
        {
            // gestionnaire
            if ($user->getIsAdminPole())
            {
                $qb->LeftJoin('etablissements.userPole', 'userPole');
                $qb->where('referentielPublics.id IS NULL OR  userPole.id = :user_id')->setParameter('user_id', $user->getId());
            }
            else
            {
                    $qb->LeftJoin('etablissements.gestionnaire', 'gestionnaire');
                    $qb->AndWhere("referentielPublics.id IS NULL OR gestionnaire.id = :gestionnaire_id")->setParameter('gestionnaire_id', $user->getGestionnaire()->getId());
            }
            
            $qb->AndWhere("edito.etablissementGestionnaire<=1 or  edito.etablissementGestionnaire=3 ");
        }
        $qb->orderBy("edito.datePublication","DESC"); 
        if ($limit) { $qb->setMaxResults($limit); }

        return $qb;
    }
    
    
    
    public function findByUser(\Pericles3Bundle\Entity\User $user, $limit = 0) 
    {
        $qb = $this->findByUserFonction($user,$limit);
        return $qb->getQuery()->getResult();
    }
    
    public function findLastByUser(\Pericles3Bundle\Entity\User $user) 
    {
        $qb = $this->findByUserFonction($user,1);
        return $qb->getQuery()->getOneOrNullResult();
    }
    
    
    
    
}


 
