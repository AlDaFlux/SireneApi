<?php

namespace Pericles3Bundle\Repository;

/**
 * CommentaireDomaineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentaireDomaineRepository extends \Doctrine\ORM\EntityRepository
{
    
    	public function findByDomaine(Domaine $domaine, $orderBy = null) 
        {
		$qb = $this->createQueryBuilder('d');
		$qb->Join('d.referentiel', 'referentiel');
		$qb->where('d.domaine = :domaine_id')->setParameter('domaine_id', $domaine->getId());
		
                if (isset($orderBy)) $qb->orderBy($orderBy);
                
		return $qb->getQuery()->getResult();
	}
        
    	public function findByDomaineRefUser(\Pericles3Bundle\Entity\User $User,\Pericles3Bundle\Entity\Referentiel $referentiel) 
        {
		$qb = $this->createQueryBuilder('commentaire');
		$qb->Join('commentaire.domaine', 'domaine');
		$qb->Join('domaine.referentiel', 'referentiel');
		$qb->Join('domaine.etablissement', 'etablissement');
                $qb->Join('etablissement.gestionnaire', 'gestionnaire');
                if ($User->getIsAdminPole())
                  {
                      $qb->Join('etablissement.userPole', 'userPole');
                      $qb->where('userPole.id = :user_id')->setParameter('user_id', $User->getId());
                  }
                  else
                  {
                      $qb->where("etablissement.gestionnaire = :gestionnaire_id")->setParameter('gestionnaire_id', $User->getGestionnaire()->getId());
                  }
                $qb->AndWhere('referentiel.id = :ref_id')->setParameter('ref_id', $referentiel->getId());
		return $qb->getQuery()->getResult();
	}
        
        
        
        
        public function FindByEtablissementOccurence($etablissement,$occurence) 
        {
            $qb = $this->createQueryBuilder('commentaires');
            $qb->select(array('commentaires.commentaire as lib','domaines.id as id','\'pericles3_domaine\' as path','\'CommentaireDomaineContainer\' as ancre'));
            $qb->Join('commentaires.domaine', 'domaines');
            $qb->where("commentaires.commentaire LIKE :occurence  AND domaines.etablissement = :etablissement_id")->setParameter('etablissement_id', $etablissement->getId())->setParameter('occurence',"%".$occurence."%");
            $qb->setMaxResults(25);
            return $qb->getQuery()->getResult();
        }
        

        
        public function FindReferentielDesuet() 
        {
            $qb = $this->createQueryBuilder('commentaire');
            $qb->Join('commentaire.domaine', 'domaines');
            $qb->Join('domaines.referentiel', 'domaine_referentiel');
            $qb->Join('domaine_referentiel.ReferentielPublic', 'domaine_referentielPublic');
            $qb->Join('domaines.etablissement', 'etablissement');
            $qb->Join('etablissement.referentielPublic', 'etablissement_referentielPublic');
            $qb->where("domaine_referentielPublic.id <> etablissement_referentielPublic.id");
            return $qb->getQuery()->getResult();
        }
        
        
}
