<?php

namespace Pericles3Bundle\Repository;
 
/**
 * CritereRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PatchReferentielRepository extends \Doctrine\ORM\EntityRepository
{
	
    public function findFromPatch(\Pericles3Bundle\Entity\Patch $patch) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        return $qb->getQuery()->getResult();
    }	
    
    public function findNextRefFromPatch(\Pericles3Bundle\Entity\Patch $patch,\Pericles3Bundle\Entity\PatchReferentiel $patchReferentiel) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("ref.id > ".$patchReferentiel->GetId());
        $qb->setMaxResults(1);
        return ($qb->getQuery()->getOneOrNullResult());
    }
    

    
    public function findNextRefToValide(\Pericles3Bundle\Entity\Patch $patch,\Pericles3Bundle\Entity\PatchReferentiel $patchReferentiel) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("ref.valide = false ");
        $qb->AndWhere("ref.id > ".$patchReferentiel->GetId());
        $qb->setMaxResults(1);
        return ($qb->getQuery()->getOneOrNullResult());
    }
    
        
    
    
    public function findOneBypatcheRefAieul(\Pericles3Bundle\Entity\Patch $patch, \Pericles3Bundle\Entity\Referentiel $patchRefAieul) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Join('ref.patcheRefAieul', 'patcheRefAieul');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("patcheRefAieul.id = ".$patchRefAieul->getId());
        return ($qb->getQuery()->getOneOrNullResult());
    }
    


    public function findFromPatchRefCible(\Pericles3Bundle\Entity\Patch $patch, \Pericles3Bundle\Entity\Referentiel $RefCible) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->Where("ref.patcheRefCible = ".$RefCible->GetId());
        return ($qb->getQuery()->getOneOrNullResult());

    }
    
    
    
    public function findUnlinkCible(\Pericles3Bundle\Entity\Patch $patch) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("ref.patcheRefSource IS NULL ");
        return $qb->getQuery()->getResult();
    }
     
    
    public function findCibleType(\Pericles3Bundle\Entity\Patch $patch, $type) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->LeftJoin('ref.patcheRefCible', 'patcheRefCible');
        $qb->Join('patcheRefCible.typeReferentiel', 'typeReferentiel');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("patcheRefCible.id IS NOT NULL");
        $qb->AndWhere("typeReferentiel=".$type);
        return $qb->getQuery()->getResult();
    }


    
    
    
    
    
    
    public function findLinked(\Pericles3Bundle\Entity\Patch $patch,$verif=null) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("ref.patcheRefCible IS NOT NULL ");
        $qb->AndWhere("ref.patcheRefSource IS NOT NULL ");
        
        return $qb->getQuery()->getResult();
    }
    
    
    
    
    
    public function findUnlinkSource(\Pericles3Bundle\Entity\Patch $patch) 
    {
        $qb = $this->createQueryBuilder('ref');
        $qb->Where("ref.patch = ".$patch->GetId());
        $qb->AndWhere("ref.patcheRefCible IS NULL ");
        return $qb->getQuery()->getResult();
    }
    
    
    
     
    
        
}
